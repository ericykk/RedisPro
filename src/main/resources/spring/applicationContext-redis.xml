<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:redis="http://www.springframework.org/schema/redis" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- redis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大能够闲置状态的对象数  -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 最大分配的对象数 -->
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <!-- 当调用borrow Object方法时，是否进行有效性检查 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <!--分布式redis配置start-->
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <bean id="master" class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}"/>
                    <constructor-arg name="port" value="${redis.port}"/>
                    <constructor-arg name="timeout" value="${redis.timeout}"/>
                </bean>
                <bean id="slaveOne" class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}"/>
                    <constructor-arg name="port" value="${redis.port1}"/>
                    <constructor-arg name="timeout" value="${redis.timeout}"/>
                </bean>
                <bean id="slaveTwo" class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}"/>
                    <constructor-arg name="port" value="${redis.port2}"/>
                    <constructor-arg name="timeout" value="${redis.timeout}"/>
                </bean>
                <bean id="slaveThree" class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}"/>
                    <constructor-arg name="port" value="${redis.port3}"/>
                    <constructor-arg name="timeout" value="${redis.timeout}"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <!--分布式redis配置end-->

    <!--redis缓存拦截器配置start-->
    <bean id="methodCacheInterceptor" class="com.eric.redis.configuration.interceptor.MethodCacheInterceptor"/>
    <aop:config>
        <!--切入点 这里表示定义在redis.controller包下的任意方法的执行-->
        <aop:pointcut id="methodPoint" expression="execution(* com.eric.redis.controller.*.*(..))"/>
        <!--使用缓存拦截器-->
        <aop:advisor advice-ref="methodCacheInterceptor" pointcut-ref="methodPoint"/>
    </aop:config>
    <!--redis缓存拦截器配置end-->

</beans>